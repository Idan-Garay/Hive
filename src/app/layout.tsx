import "~/styles/globals.css";

import { Inter } from "next/font/google";

import { TRPCReactProvider } from "~/trpc/react";
import { cn } from "~/lib/utils";
import { Toaster } from "~/components/ui/toaster";

const inter = Inter({
  subsets: ["latin"],
  variable: "--font-sans",
});

export const metadata = {
  title: "Hive",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export const getSession = () => {
  return { userType: "customer" };
};

export default function RootLayout({
  children,
  flow,
  customer,
  admin,
}: {
  children: React.ReactNode;
  flow: React.ReactNode;
  customer: React.ReactNode;
  admin: React.ReactNode;
}) {
  const isAuthorized = false;
  const userType = getSession().userType as UserType;

  return (
    <html lang="en">
      <body
        className={cn(
          "min-h-screen bg-background font-sans antialiased",
          inter.variable
        )}
      >
        <TRPCReactProvider>
          {flow}
          {isAuthorized ? (userType === "admin" ? admin : customer) : children}
        </TRPCReactProvider>
        <Toaster />
      </body>
    </html>
  );
}

type UserType = "customer" | "admin";
